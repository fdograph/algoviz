{"ast":null,"code":"import{mergeSortAlgoFn}from\"./mergeSort\";import{bubbleSortAlgoFn}from\"./bubbleSort\";export var AlgoType;(function(AlgoType){AlgoType[\"BUBBLE_SORT\"]=\"@AlgoType/BUBBLE_SORT\";AlgoType[\"MERGE_SORT\"]=\"@AlgoType/MERGE_SORT\";})(AlgoType||(AlgoType={}));export var getAlgo=function getAlgo(type,originalList,setRenderList,setSelectedIdxs){switch(type){case AlgoType.MERGE_SORT:return mergeSortAlgoFn(originalList,setRenderList,setSelectedIdxs);case AlgoType.BUBBLE_SORT:return bubbleSortAlgoFn(originalList,setRenderList,setSelectedIdxs);default:throw new Error(\"Invalid algo type:\"+type);}};","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/logic/algorithms.ts"],"names":["mergeSortAlgoFn","bubbleSortAlgoFn","AlgoType","getAlgo","type","originalList","setRenderList","setSelectedIdxs","MERGE_SORT","BUBBLE_SORT","Error"],"mappings":"AAAA,OAASA,eAAT,KAAgC,aAAhC,CACA,OAASC,gBAAT,KAAiC,cAAjC,CAOA,UAAYC,CAAAA,QAAZ,C,UAAYA,Q,EAAAA,Q,wCAAAA,Q,yCAAAA,Q,GAAAA,Q,MAKZ,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CACrBC,IADqB,CAErBC,YAFqB,CAGrBC,aAHqB,CAIrBC,eAJqB,CAKC,CACtB,OAAQH,IAAR,EACE,IAAKF,CAAAA,QAAQ,CAACM,UAAd,CACE,MAAOR,CAAAA,eAAe,CAACK,YAAD,CAAeC,aAAf,CAA8BC,eAA9B,CAAtB,CACF,IAAKL,CAAAA,QAAQ,CAACO,WAAd,CACE,MAAOR,CAAAA,gBAAgB,CAACI,YAAD,CAAeC,aAAf,CAA8BC,eAA9B,CAAvB,CACF,QACE,KAAM,IAAIG,CAAAA,KAAJ,CAAU,qBAAuBN,IAAjC,CAAN,CANJ,CAQD,CAdM","sourcesContent":["import { mergeSortAlgoFn } from \"./mergeSort\";\nimport { bubbleSortAlgoFn } from \"./bubbleSort\";\n\nexport type VisualAlgoControl = {\n  play: (interval: number) => Promise<number[]>;\n  pause: () => void;\n};\n\nexport enum AlgoType {\n  BUBBLE_SORT = \"@AlgoType/BUBBLE_SORT\",\n  MERGE_SORT = \"@AlgoType/MERGE_SORT\",\n}\n\nexport const getAlgo = (\n  type: AlgoType,\n  originalList: number[],\n  setRenderList: (l: number[]) => void,\n  setSelectedIdxs: (idxs: Set<number>) => void\n): VisualAlgoControl => {\n  switch (type) {\n    case AlgoType.MERGE_SORT:\n      return mergeSortAlgoFn(originalList, setRenderList, setSelectedIdxs);\n    case AlgoType.BUBBLE_SORT:\n      return bubbleSortAlgoFn(originalList, setRenderList, setSelectedIdxs);\n    default:\n      throw new Error(\"Invalid algo type:\" + type);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}