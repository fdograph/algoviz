{"ast":null,"code":"import { mergeSortAlgoFn } from \"./mergeSort\";\nimport { bubbleSortAlgoFn } from \"./bubbleSort\";\nexport let AlgoType;\n\n(function (AlgoType) {\n  AlgoType[\"BUBBLE_SORT\"] = \"@AlgoType/BUBBLE_SORT\";\n  AlgoType[\"MERGE_SORT\"] = \"@AlgoType/MERGE_SORT\";\n})(AlgoType || (AlgoType = {}));\n\nexport const getAlgo = (type, originalList, setRenderList, setSelectedIdxs) => {\n  switch (type) {\n    case AlgoType.MERGE_SORT:\n      return mergeSortAlgoFn(originalList, setRenderList, setSelectedIdxs);\n\n    case AlgoType.BUBBLE_SORT:\n      return bubbleSortAlgoFn(originalList, setRenderList, setSelectedIdxs);\n\n    default:\n      throw new Error(\"Invalid algo type:\" + type);\n  }\n};","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/logic/algorithms.ts"],"names":["mergeSortAlgoFn","bubbleSortAlgoFn","AlgoType","getAlgo","type","originalList","setRenderList","setSelectedIdxs","MERGE_SORT","BUBBLE_SORT","Error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,aAAhC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAOA,WAAYC,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAKZ,OAAO,MAAMC,OAAO,GAAG,CACrBC,IADqB,EAErBC,YAFqB,EAGrBC,aAHqB,EAIrBC,eAJqB,KAKC;AACtB,UAAQH,IAAR;AACE,SAAKF,QAAQ,CAACM,UAAd;AACE,aAAOR,eAAe,CAACK,YAAD,EAAeC,aAAf,EAA8BC,eAA9B,CAAtB;;AACF,SAAKL,QAAQ,CAACO,WAAd;AACE,aAAOR,gBAAgB,CAACI,YAAD,EAAeC,aAAf,EAA8BC,eAA9B,CAAvB;;AACF;AACE,YAAM,IAAIG,KAAJ,CAAU,uBAAuBN,IAAjC,CAAN;AANJ;AAQD,CAdM","sourcesContent":["import { mergeSortAlgoFn } from \"./mergeSort\";\nimport { bubbleSortAlgoFn } from \"./bubbleSort\";\n\nexport type VisualAlgoControl = {\n  play: (interval: number) => Promise<number[]>;\n  pause: () => void;\n};\n\nexport enum AlgoType {\n  BUBBLE_SORT = \"@AlgoType/BUBBLE_SORT\",\n  MERGE_SORT = \"@AlgoType/MERGE_SORT\",\n}\n\nexport const getAlgo = (\n  type: AlgoType,\n  originalList: number[],\n  setRenderList: (l: number[]) => void,\n  setSelectedIdxs: (idxs: Set<number>) => void\n): VisualAlgoControl => {\n  switch (type) {\n    case AlgoType.MERGE_SORT:\n      return mergeSortAlgoFn(originalList, setRenderList, setSelectedIdxs);\n    case AlgoType.BUBBLE_SORT:\n      return bubbleSortAlgoFn(originalList, setRenderList, setSelectedIdxs);\n    default:\n      throw new Error(\"Invalid algo type:\" + type);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}