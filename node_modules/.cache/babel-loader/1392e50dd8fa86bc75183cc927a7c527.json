{"ast":null,"code":"var _jsxFileName = \"/Users/fernandosilva/projects/algoviz/src/components/Algorithm/index.tsx\";\nimport React from \"react\";\nimport Styles from \"./Algorithm.module.css\";\nimport { Item } from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Algorithm = _ref => {\n  let {\n    renderList,\n    max,\n    min,\n    selected\n  } = _ref;\n  const items = renderList.map((val, idx) => /*#__PURE__*/_jsxDEV(Item, {\n    value: val,\n    isSelected: selected.has(idx),\n    max: max,\n    min: min\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.algorithm,\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_c = Algorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/components/Algorithm/index.tsx"],"names":["React","Styles","Item","Algorithm","renderList","max","min","selected","items","map","val","idx","has","algorithm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;;AASA,OAAO,MAAMC,SAA+B,GAAG,QAKzC;AAAA,MAL0C;AAC9CC,IAAAA,UAD8C;AAE9CC,IAAAA,GAF8C;AAG9CC,IAAAA,GAH8C;AAI9CC,IAAAA;AAJ8C,GAK1C;AACJ,QAAMC,KAAK,GAAGJ,UAAU,CAACK,GAAX,CAAe,CAACC,GAAD,EAAMC,GAAN,kBAC3B,QAAC,IAAD;AAEE,IAAA,KAAK,EAAED,GAFT;AAGE,IAAA,UAAU,EAAEH,QAAQ,CAACK,GAAT,CAAaD,GAAb,CAHd;AAIE,IAAA,GAAG,EAAEN,GAJP;AAKE,IAAA,GAAG,EAAEC;AALP,KACOK,GADP;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACY,SAAvB;AAAA,cAAmCL;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjBM;KAAML,S","sourcesContent":["import React from \"react\";\n\nimport Styles from \"./Algorithm.module.css\";\nimport { Item } from \"./Item\";\n\ninterface SceneProps {\n  renderList: number[];\n  selected: Set<number>;\n  max: number;\n  min: number;\n}\n\nexport const Algorithm: React.FC<SceneProps> = ({\n  renderList,\n  max,\n  min,\n  selected,\n}) => {\n  const items = renderList.map((val, idx) => (\n    <Item\n      key={idx}\n      value={val}\n      isSelected={selected.has(idx)}\n      max={max}\n      min={min}\n    />\n  ));\n\n  return <div className={Styles.algorithm}>{items}</div>;\n};\n"]},"metadata":{},"sourceType":"module"}