{"ast":null,"code":"var _jsxFileName = \"/Users/fernandosilva/projects/algoviz/src/components/SortingAlgos/AlgoTypeSelector.tsx\";\nimport React from \"react\";\nimport { AlgoType } from \"../../logic/algorithms\";\nimport Style from \"./SortingAlgos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getAlgoName = type => {\n  switch (type) {\n    case AlgoType.BUBBLE_SORT:\n      return \"Bubble Sort\";\n\n    case AlgoType.MERGE_SORT:\n      return \"Merge Sort\";\n\n    default:\n      return \"Unknown\";\n  }\n};\n\nexport const AlgoTypeSelector = _ref => {\n  let {\n    onChange,\n    selectedType,\n    attributes\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.AlgorithmsControlSelect,\n    children: /*#__PURE__*/_jsxDEV(\"select\", { ...attributes,\n      defaultValue: selectedType,\n      onChange: event => onChange(event.target.value),\n      children: Object.values(AlgoType).map((type, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type,\n        children: getAlgoName(type)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = AlgoTypeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlgoTypeSelector\");","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/components/SortingAlgos/AlgoTypeSelector.tsx"],"names":["React","AlgoType","Style","getAlgoName","type","BUBBLE_SORT","MERGE_SORT","AlgoTypeSelector","onChange","selectedType","attributes","AlgorithmsControlSelect","event","target","value","Object","values","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAoB;AACtC,UAAQA,IAAR;AACE,SAAKH,QAAQ,CAACI,WAAd;AACE,aAAO,aAAP;;AACF,SAAKJ,QAAQ,CAACK,UAAd;AACE,aAAO,YAAP;;AACF;AACE,aAAO,SAAP;AANJ;AAQD,CATD;;AAgBA,OAAO,MAAMC,gBAAiD,GAAG,QAI3D;AAAA,MAJ4D;AAChEC,IAAAA,QADgE;AAEhEC,IAAAA,YAFgE;AAGhEC,IAAAA;AAHgE,GAI5D;AACJ,sBACE;AAAK,IAAA,SAAS,EAAER,KAAK,CAACS,uBAAtB;AAAA,2BACE,uBACMD,UADN;AAEE,MAAA,YAAY,EAAED,YAFhB;AAGE,MAAA,QAAQ,EAAGG,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/B;AAAA,gBAKGC,MAAM,CAACC,MAAP,CAAcf,QAAd,EAAwBgB,GAAxB,CAA4B,CAACb,IAAD,EAAiBc,CAAjB,kBAC3B;AAAgB,QAAA,KAAK,EAAEd,IAAvB;AAAA,kBACGD,WAAW,CAACC,IAAD;AADd,SAAac,CAAb;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApBM;KAAMX,gB","sourcesContent":["import React from \"react\";\nimport { AlgoType } from \"../../logic/algorithms\";\n\nimport Style from \"./SortingAlgos.module.css\";\n\nconst getAlgoName = (type: AlgoType) => {\n  switch (type) {\n    case AlgoType.BUBBLE_SORT:\n      return \"Bubble Sort\";\n    case AlgoType.MERGE_SORT:\n      return \"Merge Sort\";\n    default:\n      return \"Unknown\";\n  }\n};\n\nexport type AlgoTypeSelectorProps = {\n  onChange: (t: AlgoType) => void;\n  selectedType: AlgoType;\n  attributes?: React.SelectHTMLAttributes<HTMLSelectElement>;\n};\nexport const AlgoTypeSelector: React.FC<AlgoTypeSelectorProps> = ({\n  onChange,\n  selectedType,\n  attributes,\n}) => {\n  return (\n    <div className={Style.AlgorithmsControlSelect}>\n      <select\n        {...attributes}\n        defaultValue={selectedType}\n        onChange={(event) => onChange(event.target.value as AlgoType)}\n      >\n        {Object.values(AlgoType).map((type: AlgoType, i) => (\n          <option key={i} value={type}>\n            {getAlgoName(type)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}