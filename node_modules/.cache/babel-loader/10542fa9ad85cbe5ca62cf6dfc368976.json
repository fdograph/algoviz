{"ast":null,"code":"import _defineProperty from\"/Users/fernandosilva/projects/algoviz/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/Users/fernandosilva/projects/algoviz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/fernandosilva/projects/algoviz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useMemo,useState}from\"react\";import{buildRandomList}from\"../../logic/utils\";import Styles from\"./SortingAlgos.module.css\";import{AlgoType,getAlgo}from\"../../logic/algorithms\";import{Algorithm}from\"../Algorithm\";import{AlgoTypeSelector}from\"./AlgoTypeSelector\";import classNames from\"classnames\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SortingAlgos=function SortingAlgos(){var _useState=useState(AlgoType.BUBBLE_SORT),_useState2=_slicedToArray(_useState,2),algoType=_useState2[0],setAlgoType=_useState2[1];var _useState3=useState(buildRandomList(150)),_useState4=_slicedToArray(_useState3,1),initialList=_useState4[0];var _ref=[Math.min.apply(Math,_toConsumableArray(initialList)),Math.max.apply(Math,_toConsumableArray(initialList))],min=_ref[0],max=_ref[1];var _useState5=useState(initialList),_useState6=_slicedToArray(_useState5,2),renderList=_useState6[0],setRenderList=_useState6[1];var _useState7=useState(new Set()),_useState8=_slicedToArray(_useState7,2),selectedIdxs=_useState8[0],setSelectedIdxs=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isPLaying=_useState10[0],setIsPlaying=_useState10[1];var algo=useMemo(function(){return getAlgo(algoType,initialList,setRenderList,setSelectedIdxs);},[algoType,initialList]);var playPause=useCallback(function(){if(isPLaying){algo.pause();setIsPlaying(false);}else{algo.play(30).then(function(sorted){algo.pause();setIsPlaying(false);setRenderList(sorted);});setIsPlaying(true);}},[algo,isPLaying]);useEffect(function(){return function(){setIsPlaying(false);algo.pause();};},[algo]);return/*#__PURE__*/_jsxs(\"section\",{className:Styles.AlgorithmsWrapper,children:[/*#__PURE__*/_jsxs(\"div\",{className:Styles.AlgorithmsControls,children:[/*#__PURE__*/_jsx(\"div\",{className:Styles.AlgorithmsControlField,children:/*#__PURE__*/_jsx(AlgoTypeSelector,{selectedType:algoType,onChange:function onChange(t){return setAlgoType(t);}})}),/*#__PURE__*/_jsx(\"div\",{className:Styles.AlgorithmsControlField,children:/*#__PURE__*/_jsx(\"button\",{className:classNames(Styles.AlgorithmsControlBtn,_defineProperty({},Styles.isPlaying,isPLaying)),onClick:playPause,children:isPLaying?\"Stop\":\"Start\"})})]}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(Algorithm,{renderList:renderList,selected:selectedIdxs,max:max,min:min})})]});};export default SortingAlgos;","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/components/SortingAlgos/index.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","buildRandomList","Styles","AlgoType","getAlgo","Algorithm","AlgoTypeSelector","classNames","SortingAlgos","BUBBLE_SORT","algoType","setAlgoType","initialList","Math","min","max","renderList","setRenderList","Set","selectedIdxs","setSelectedIdxs","isPLaying","setIsPlaying","algo","playPause","pause","play","then","sorted","AlgorithmsWrapper","AlgorithmsControls","AlgorithmsControlField","t","AlgorithmsControlBtn","isPlaying"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { buildRandomList } from \"../../logic/utils\";\n\nimport Styles from \"./SortingAlgos.module.css\";\nimport { AlgoType, getAlgo } from \"../../logic/algorithms\";\nimport { Algorithm } from \"../Algorithm\";\nimport { AlgoTypeSelector } from \"./AlgoTypeSelector\";\nimport classNames from \"classnames\";\n\nconst SortingAlgos: React.FC = () => {\n  const [algoType, setAlgoType] = useState<AlgoType>(AlgoType.BUBBLE_SORT);\n  const [initialList] = useState(buildRandomList(150));\n  const [min, max] = [Math.min(...initialList), Math.max(...initialList)];\n  const [renderList, setRenderList] = useState<number[]>(initialList);\n  const [selectedIdxs, setSelectedIdxs] = useState<Set<number>>(new Set());\n  const [isPLaying, setIsPlaying] = useState<boolean>(false);\n  const algo = useMemo(\n    () => getAlgo(algoType, initialList, setRenderList, setSelectedIdxs),\n    [algoType, initialList]\n  );\n\n  const playPause = useCallback(() => {\n    if (isPLaying) {\n      algo.pause();\n      setIsPlaying(false);\n    } else {\n      algo.play(30).then((sorted) => {\n        algo.pause();\n        setIsPlaying(false);\n        setRenderList(sorted);\n      });\n      setIsPlaying(true);\n    }\n  }, [algo, isPLaying]);\n\n  useEffect(() => {\n    return () => {\n      setIsPlaying(false);\n      algo.pause();\n    };\n  }, [algo]);\n\n  return (\n    <section className={Styles.AlgorithmsWrapper}>\n      <div className={Styles.AlgorithmsControls}>\n        <div className={Styles.AlgorithmsControlField}>\n          <AlgoTypeSelector\n            selectedType={algoType}\n            onChange={(t) => setAlgoType(t)}\n          />\n        </div>\n        <div className={Styles.AlgorithmsControlField}>\n          <button\n            className={classNames(Styles.AlgorithmsControlBtn, {\n              [Styles.isPlaying]: isPLaying,\n            })}\n            onClick={playPause}\n          >\n            {isPLaying ? \"Stop\" : \"Start\"}\n          </button>\n        </div>\n      </div>\n      <section>\n        <Algorithm\n          renderList={renderList}\n          selected={selectedIdxs}\n          max={max}\n          min={min}\n        />\n      </section>\n    </section>\n  );\n};\n\nexport default SortingAlgos;\n"]},"metadata":{},"sourceType":"module"}