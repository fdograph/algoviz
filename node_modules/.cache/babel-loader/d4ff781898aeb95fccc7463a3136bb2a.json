{"ast":null,"code":"import { arrayToMap, checkKillSwitch, enableKillSwitch, onSortStep, resetKillSwitch, swap } from \"./utils\";\nexport const bubbleSort = async (map, onSortStep) => {\n  let list = [...map.values()];\n  const size = list.length;\n\n  for (let i = 0; i < size - 1; i++) {\n    for (let j = 0; j < size - i - 1; j++) {\n      checkKillSwitch();\n\n      if (list[j] > list[j + 1]) {\n        list = swap(j, j + 1, list);\n        const targetMap = new Map();\n        targetMap.set(j, list[j]);\n        targetMap.set(j + 1, list[j + 1]);\n        await onSortStep(targetMap);\n      }\n    }\n  }\n\n  return arrayToMap(list);\n};\nexport const bubbleSortAlgoFn = (originalList, setRenderList, setSelectedIdxs) => ({\n  play: async interval => {\n    resetKillSwitch();\n    const sortedMap = await bubbleSort(arrayToMap(originalList), onSortStep(originalList, setRenderList, setSelectedIdxs, interval));\n    setSelectedIdxs(new Set());\n    return [...sortedMap.values()];\n  },\n  pause: () => enableKillSwitch()\n});","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/logic/bubbleSort.ts"],"names":["arrayToMap","checkKillSwitch","enableKillSwitch","onSortStep","resetKillSwitch","swap","bubbleSort","map","list","values","size","length","i","j","targetMap","Map","set","bubbleSortAlgoFn","originalList","setRenderList","setSelectedIdxs","play","interval","sortedMap","Set","pause"],"mappings":"AAAA,SACEA,UADF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,UALF,EAMEC,eANF,EAOEC,IAPF,QASO,SATP;AAWA,OAAO,MAAMC,UAAsB,GAAG,OACpCC,GADoC,EAEpCJ,UAFoC,KAGjC;AACH,MAAIK,IAAI,GAAG,CAAC,GAAGD,GAAG,CAACE,MAAJ,EAAJ,CAAX;AACA,QAAMC,IAAI,GAAGF,IAAI,CAACG,MAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,GAAG,CAA3B,EAA8BE,CAAC,EAA/B,EAAmC;AACjC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,GAAGE,CAAP,GAAW,CAA/B,EAAkCC,CAAC,EAAnC,EAAuC;AACrCZ,MAAAA,eAAe;;AAEf,UAAIO,IAAI,CAACK,CAAD,CAAJ,GAAUL,IAAI,CAACK,CAAC,GAAG,CAAL,CAAlB,EAA2B;AACzBL,QAAAA,IAAI,GAAGH,IAAI,CAACQ,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWL,IAAX,CAAX;AAEA,cAAMM,SAAS,GAAG,IAAIC,GAAJ,EAAlB;AACAD,QAAAA,SAAS,CAACE,GAAV,CAAcH,CAAd,EAAiBL,IAAI,CAACK,CAAD,CAArB;AACAC,QAAAA,SAAS,CAACE,GAAV,CAAcH,CAAC,GAAG,CAAlB,EAAqBL,IAAI,CAACK,CAAC,GAAG,CAAL,CAAzB;AAEA,cAAMV,UAAU,CAACW,SAAD,CAAhB;AACD;AACF;AACF;;AAED,SAAOd,UAAU,CAACQ,IAAD,CAAjB;AACD,CAxBM;AA0BP,OAAO,MAAMS,gBAA8B,GAAG,CAC5CC,YAD4C,EAE5CC,aAF4C,EAG5CC,eAH4C,MAIxC;AACJC,EAAAA,IAAI,EAAE,MAAOC,QAAP,IAA4B;AAChClB,IAAAA,eAAe;AAEf,UAAMmB,SAAS,GAAG,MAAMjB,UAAU,CAChCN,UAAU,CAACkB,YAAD,CADsB,EAEhCf,UAAU,CAACe,YAAD,EAAeC,aAAf,EAA8BC,eAA9B,EAA+CE,QAA/C,CAFsB,CAAlC;AAKAF,IAAAA,eAAe,CAAC,IAAII,GAAJ,EAAD,CAAf;AAEA,WAAO,CAAC,GAAGD,SAAS,CAACd,MAAV,EAAJ,CAAP;AACD,GAZG;AAaJgB,EAAAA,KAAK,EAAE,MAAMvB,gBAAgB;AAbzB,CAJwC,CAAvC","sourcesContent":["import {\n  arrayToMap,\n  BaseAlgoFn,\n  checkKillSwitch,\n  enableKillSwitch,\n  onSortStep,\n  resetKillSwitch,\n  swap,\n  VisualAlgoFn,\n} from \"./utils\";\n\nexport const bubbleSort: BaseAlgoFn = async (\n  map: Map<number, number>,\n  onSortStep: (list: Map<number, number>) => Promise<void>\n) => {\n  let list = [...map.values()];\n  const size = list.length;\n\n  for (let i = 0; i < size - 1; i++) {\n    for (let j = 0; j < size - i - 1; j++) {\n      checkKillSwitch();\n\n      if (list[j] > list[j + 1]) {\n        list = swap(j, j + 1, list);\n\n        const targetMap = new Map<number, number>();\n        targetMap.set(j, list[j]);\n        targetMap.set(j + 1, list[j + 1]);\n\n        await onSortStep(targetMap);\n      }\n    }\n  }\n\n  return arrayToMap(list);\n};\n\nexport const bubbleSortAlgoFn: VisualAlgoFn = (\n  originalList: number[],\n  setRenderList: (l: number[]) => void,\n  setSelectedIdxs: (idxs: Set<number>) => void\n) => ({\n  play: async (interval: number) => {\n    resetKillSwitch();\n\n    const sortedMap = await bubbleSort(\n      arrayToMap(originalList),\n      onSortStep(originalList, setRenderList, setSelectedIdxs, interval)\n    );\n\n    setSelectedIdxs(new Set<number>());\n\n    return [...sortedMap.values()];\n  },\n  pause: () => enableKillSwitch(),\n});\n"]},"metadata":{},"sourceType":"module"}