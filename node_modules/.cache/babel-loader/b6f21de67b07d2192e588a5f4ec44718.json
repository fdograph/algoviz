{"ast":null,"code":"import _objectSpread from\"/Users/fernandosilva/projects/algoviz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import{AlgoType}from\"../../logic/algorithms\";import Style from\"./SortingAlgos.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var getAlgoName=function getAlgoName(type){switch(type){case AlgoType.BUBBLE_SORT:return\"Bubble Sort\";case AlgoType.MERGE_SORT:return\"Merge Sort\";default:return\"Unknown\";}};export var AlgoTypeSelector=function AlgoTypeSelector(_ref){var _onChange=_ref.onChange,selectedType=_ref.selectedType,attributes=_ref.attributes;return/*#__PURE__*/_jsx(\"div\",{className:Style.AlgorithmsControlSelect,children:/*#__PURE__*/_jsx(\"select\",_objectSpread(_objectSpread({},attributes),{},{defaultValue:selectedType,onChange:function onChange(event){return _onChange(event.target.value);},children:Object.values(AlgoType).map(function(type,i){return/*#__PURE__*/_jsx(\"option\",{value:type,children:getAlgoName(type)},i);})}))});};","map":{"version":3,"sources":["/Users/fernandosilva/projects/algoviz/src/components/SortingAlgos/AlgoTypeSelector.tsx"],"names":["React","AlgoType","Style","getAlgoName","type","BUBBLE_SORT","MERGE_SORT","AlgoTypeSelector","onChange","selectedType","attributes","AlgorithmsControlSelect","event","target","value","Object","values","map","i"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAoB,CACtC,OAAQA,IAAR,EACE,IAAKH,CAAAA,QAAQ,CAACI,WAAd,CACE,MAAO,aAAP,CACF,IAAKJ,CAAAA,QAAQ,CAACK,UAAd,CACE,MAAO,YAAP,CACF,QACE,MAAO,SAAP,CANJ,CAQD,CATD,CAgBA,MAAO,IAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAI3D,IAHJC,CAAAA,SAGI,MAHJA,QAGI,CAFJC,YAEI,MAFJA,YAEI,CADJC,UACI,MADJA,UACI,CACJ,mBACE,YAAK,SAAS,CAAER,KAAK,CAACS,uBAAtB,uBACE,6CACMD,UADN,MAEE,YAAY,CAAED,YAFhB,CAGE,QAAQ,CAAE,kBAACG,KAAD,QAAWJ,CAAAA,SAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB,EAHZ,UAKGC,MAAM,CAACC,MAAP,CAAcf,QAAd,EAAwBgB,GAAxB,CAA4B,SAACb,IAAD,CAAiBc,CAAjB,qBAC3B,eAAgB,KAAK,CAAEd,IAAvB,UACGD,WAAW,CAACC,IAAD,CADd,EAAac,CAAb,CAD2B,EAA5B,CALH,GADF,EADF,CAeD,CApBM","sourcesContent":["import React from \"react\";\nimport { AlgoType } from \"../../logic/algorithms\";\n\nimport Style from \"./SortingAlgos.module.css\";\n\nconst getAlgoName = (type: AlgoType) => {\n  switch (type) {\n    case AlgoType.BUBBLE_SORT:\n      return \"Bubble Sort\";\n    case AlgoType.MERGE_SORT:\n      return \"Merge Sort\";\n    default:\n      return \"Unknown\";\n  }\n};\n\nexport type AlgoTypeSelectorProps = {\n  onChange: (t: AlgoType) => void;\n  selectedType: AlgoType;\n  attributes?: React.SelectHTMLAttributes<HTMLSelectElement>;\n};\nexport const AlgoTypeSelector: React.FC<AlgoTypeSelectorProps> = ({\n  onChange,\n  selectedType,\n  attributes,\n}) => {\n  return (\n    <div className={Style.AlgorithmsControlSelect}>\n      <select\n        {...attributes}\n        defaultValue={selectedType}\n        onChange={(event) => onChange(event.target.value as AlgoType)}\n      >\n        {Object.values(AlgoType).map((type: AlgoType, i) => (\n          <option key={i} value={type}>\n            {getAlgoName(type)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}